/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.VeteAssistantRole;

import Business.Adoption.AdoptionOffering;
import Business.Animal.Animal;
import static Business.Animal.Animal.AnimalType.Cat;
import Business.Animal.AnimalStatusRecord;
import Business.Animal.Cat;
import Business.Animal.Dog;
import Business.Cage.CageCell;
import Business.Date.Date;
import Business.Enterprise.Enterprise;
import Business.Enterprise.RescueCenterEnterprise;
import Business.Shelter.ShelterCell;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class ReviewAnimalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReviewAnimalJPanel
     */
    
    private CageCell cage;
    private JPanel container;
    private RescueCenterEnterprise enterprise;
    
    ReviewAnimalJPanel(JPanel container, Enterprise enterprise, CageCell cage) {
        initComponents();
        this.container = container;
        this.cage = cage;
        this.enterprise = (RescueCenterEnterprise)enterprise;

        
        rbtnGood.setSelected(true);
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCage.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        row[0] = cage.getCellId();
        row[1] = cage.getLocation();
        row[2] = cage.getAnimal().getType();
        row[3] = cage.getAnimal().getColor();

        model.addRow(row);
    }
    
    public Date getDateAfterNDays(Date d, int n) {
       Date after = new Date();
        //runnian Febrary
        if( ( (d.getYear()%400 != 0 && d.getYear()%4 == 0) || (d.getYear()%400 == 0)) && d.getMonth() == 2) {
            if(d.getDate() < 29-n) {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth());
                after.setDate(d.getDate() + n);
            }
            else {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth() + 1);
                after.setDate(d.getDate() + n - 29);
            }
        }
        //pingnian febrary
        else if(d.getYear()%4 != 0 && d.getMonth() == 2) {
            if(d.getDate() < 28-n) {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth());
                after.setDate(d.getDate() + n);
            }
            else {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth() + 1);
                after.setDate(d.getDate() + n - 28);
            }
        }
        //pingnian 30tian
        else if(d.getMonth() == 4 || d.getMonth() == 6 || d.getMonth() == 9 || d.getMonth() == 11) {
            if(d.getDate() <= 30-n) {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth());
                after.setDate(d.getDate() + n);
            }
            else {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth() + 1);
                after.setDate(d.getDate() + n -30);
            }
        }
        //pingnian 31tian
        else {
            if(d.getDate() <= 31-n) {
                after.setYear(d.getYear());
                after.setMonth(d.getMonth());
                after.setDate(d.getDate() + n);
            }
            else {
                if(d.getMonth()<=11) {
                    after.setYear(d.getYear());
                    after.setMonth(d.getMonth() + 1);
                    after.setDate(d.getDate() + n - 31);
                }
                else {
                    after.setYear(d.getYear() + 1);
                    after.setMonth(1);
                    after.setDate(d.getDate() + n - 31);
                }
            }
        }
        return after;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCage = new javax.swing.JTable();
        txtWeight = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rbtnBad = new javax.swing.JRadioButton();
        rbtnReserved = new javax.swing.JRadioButton();
        rbtnGood = new javax.swing.JRadioButton();
        btnFinish = new javax.swing.JButton();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Review An Animal");

        tblCage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cage", "Location", "Animal Type", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCage);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("Weight:");

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("Status:");

        rbtnBad.setText("Bad");
        rbtnBad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnBadActionPerformed(evt);
            }
        });

        rbtnReserved.setText("Reserved");
        rbtnReserved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnReservedActionPerformed(evt);
            }
        });

        rbtnGood.setText("Good");
        rbtnGood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnGoodActionPerformed(evt);
            }
        });

        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnBad)
                                .addGap(12, 12, 12)
                                .addComponent(rbtnReserved)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnGood))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbtnBad)
                    .addComponent(rbtnReserved)
                    .addComponent(rbtnGood))
                .addGap(75, 75, 75)
                .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        VeteAssistantWorkAreaJPanel vajp = (VeteAssistantWorkAreaJPanel) component;
        vajp.populateTable();
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void rbtnBadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnBadActionPerformed
        // TODO add your handling code here:
        rbtnReserved.setSelected(false);
        rbtnGood.setSelected(false);
    }//GEN-LAST:event_rbtnBadActionPerformed

    private void rbtnReservedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnReservedActionPerformed
        // TODO add your handling code here:
        rbtnBad.setSelected(false);
        rbtnGood.setSelected(false);
    }//GEN-LAST:event_rbtnReservedActionPerformed

    private void rbtnGoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnGoodActionPerformed
        // TODO add your handling code here:
        rbtnBad.setSelected(false);
        rbtnReserved.setSelected(false);
    }//GEN-LAST:event_rbtnGoodActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        // TODO add your handling code here:
        if(!txtWeight.getText().matches("\\d+(\\.\\d+)?")) {
            JOptionPane.showMessageDialog(null, "Weight is invalid.");
            return;
        }
        
        AnimalStatusRecord statusRecord = new AnimalStatusRecord();
        
        Calendar c = Calendar.getInstance();
        int year = c.get(Calendar.YEAR); 
        int month = c.get(Calendar.MONTH); 
        int date = c.get(Calendar.DATE); 
        statusRecord.getDate().setYear(year);
        statusRecord.getDate().setMonth(month);
        statusRecord.getDate().setDate(date);
        
        double weight = Double.parseDouble(txtWeight.getText());
        statusRecord.setWeight(weight);
        
        if(rbtnBad.isSelected() == true) {
            statusRecord.setStatus(AnimalStatusRecord.BAD_STATUS);
            Date d = getDateAfterNDays(statusRecord.getDate(),7);
            cage.getAnimal().setNextReview(d);
            cage.getAnimal().getStatusDir().addAnimalStatus(statusRecord);
        }
        else if(rbtnReserved.isSelected() == true) {
            statusRecord.setStatus(AnimalStatusRecord.RESERVED_STATUS);
            Date d = getDateAfterNDays(statusRecord.getDate(),7);
            cage.getAnimal().setNextReview(d);
            cage.getAnimal().getStatusDir().addAnimalStatus(statusRecord);
        }
        else if(rbtnGood.isSelected() == true) {
            statusRecord.setStatus(AnimalStatusRecord.GOOD_STATUS);
            cage.getAnimal().setStatus(Animal.READY_STATUS);
            
            if(cage.getAnimal() instanceof Cat || cage.getAnimal() instanceof Dog) {
                AdoptionOffering ao = new AdoptionOffering();
                ao.setAnimal(cage.getAnimal());
                ao.setPublishedDate(statusRecord.getDate());
                enterprise.getAdoptionList().addAdoptionOffering(ao);
            }
            
            for(ShelterCell sc: enterprise.getShelterCellDir().getShelterCellList()) {
                if(sc.getStatus().equals(ShelterCell.AVAIL_STATUS)) {
                    sc.setAnimal(cage.getAnimal());
                    sc.setStatus(ShelterCell.OCCUPIED_STATUS);
                    break;
                }
            }
            cage.setStatus(CageCell.AVAIL_STATUS);
            cage.getAnimal().getStatusDir().addAnimalStatus(statusRecord);
            cage.setAnimal(null);
            
            for(AdoptionOffering ao: enterprise.getAdoptionList().getAdoptionOfferingList()) {
                System.out.println(ao.getAnimal().getAnimalId());
                System.out.println(ao.getPublishedDate());
                System.out.println(ao.getStatus());
            }
        }
        String message = "Review has been recorded.";
        if(rbtnGood.isSelected() == true) {
            message += "\nThe Animal has been sent to shelter.";
        }
        else {
            message += "\nThe date of next review has been updated.";
        }
        btnFinish.setEnabled(false);
        JOptionPane.showMessageDialog(null, message);
        
    }//GEN-LAST:event_btnFinishActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFinish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtnBad;
    private javax.swing.JRadioButton rbtnGood;
    private javax.swing.JRadioButton rbtnReserved;
    private javax.swing.JTable tblCage;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
